{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "CreationContextSchema": {
            "type": "object",
            "properties": {
                "created_at": {
                    "title": "created_at",
                    "type": "string",
                    "format": "date-time"
                },
                "created_by": {
                    "title": "created_by",
                    "type": "string"
                },
                "created_by_type": {
                    "title": "created_by_type",
                    "type": "string"
                },
                "last_modified_at": {
                    "title": "last_modified_at",
                    "type": "string",
                    "format": "date-time"
                },
                "last_modified_by": {
                    "title": "last_modified_by",
                    "type": "string"
                },
                "last_modified_by_type": {
                    "title": "last_modified_by_type",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "NlpFeaturizationSettingsSchema": {
            "type": "object",
            "properties": {
                "dataset_language": {
                    "title": "dataset_language",
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "ManagedIdentitySchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "client_id": {
                    "title": "client_id",
                    "type": "string"
                },
                "msi_resource_id": {
                    "title": "msi_resource_id",
                    "type": "string"
                },
                "object_id": {
                    "title": "object_id",
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "managed",
                        "managed_identity"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "AMLTokenIdentitySchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "aml_token"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "UserIdentitySchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "user_identity"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "NlpLimitsSchema": {
            "type": "object",
            "properties": {
                "max_concurrent_trials": {
                    "title": "max_concurrent_trials",
                    "type": "number",
                    "format": "integer"
                },
                "max_nodes": {
                    "title": "max_nodes",
                    "type": "number",
                    "format": "integer"
                },
                "max_trials": {
                    "title": "max_trials",
                    "type": "number",
                    "format": "integer"
                },
                "timeout_minutes": {
                    "title": "timeout_minutes",
                    "type": "number",
                    "format": "integer"
                },
                "trial_timeout_minutes": {
                    "title": "trial_timeout_minutes",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "OutputSchema": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string",
                    "enum": [
                        "mount",
                        "upload",
                        "rw_mount",
                        "direct"
                    ],
                    "title": "mode"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "path": {
                    "title": "path",
                    "type": "string"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "uri_file",
                        "uri_folder",
                        "custom_model",
                        "mlflow_model",
                        "mltable",
                        "triton_model"
                    ],
                    "title": "type"
                },
                "version": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "integer"
                        }
                    ],
                    "title": "version"
                }
            },
            "additionalProperties": false
        },
        "QueueSettingsSchema": {
            "type": "object",
            "properties": {
                "job_tier": {
                    "type": "string",
                    "enum": [
                        "spot",
                        "basic",
                        "standard",
                        "premium"
                    ],
                    "title": "job_tier"
                },
                "priority": {
                    "type": "string",
                    "enum": [
                        "low",
                        "medium",
                        "high"
                    ],
                    "title": "priority"
                }
            },
            "additionalProperties": false
        },
        "JobResourceConfigurationSchema": {
            "type": "object",
            "properties": {
                "docker_args": {
                    "title": "docker_args",
                    "type": "string",
                    "description": "arguments to pass to the Docker run command."
                },
                "instance_count": {
                    "title": "instance_count",
                    "type": "number",
                    "format": "integer"
                },
                "instance_type": {
                    "title": "instance_type",
                    "type": "string",
                    "description": "The instance type to make available to this job."
                },
                "locations": {
                    "title": "locations",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                                "title": "locations"
                            },
                            {
                                "title": "locations",
                                "type": "string"
                            }
                        ]
                    }
                },
                "max_instance_count": {
                    "title": "max_instance_count",
                    "type": "number",
                    "format": "integer",
                    "description": "The maximum number of instances to make available to this job."
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                },
                "shm_size": {
                    "title": "shm_size",
                    "type": "string",
                    "description": "The size of the docker container's shared memory block. This should be in the format of `<number><unit>` where number as to be greater than 0 and the unit can be one of `b` (bytes), `k` (kilobytes), `m` (megabytes), or `g` (gigabytes)."
                }
            },
            "additionalProperties": false
        },
        "NlpParameterSubspaceSchema": {
            "type": "object",
            "properties": {
                "gradient_accumulation_steps": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "gradient_accumulation_steps"
                        },
                        {
                            "title": "gradient_accumulation_steps",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/CustomChoiceSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/RandintSchema"
                        }
                    ]
                },
                "learning_rate": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "learning_rate"
                        },
                        {
                            "title": "learning_rate",
                            "type": "number",
                            "format": "float"
                        },
                        {
                            "title": "learning_rate",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/CustomChoiceSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/CustomChoiceSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UniformSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/QUniformSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/NormalSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/QNormalSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/RandintSchema"
                        }
                    ]
                },
                "learning_rate_scheduler": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "learning_rate_scheduler"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "none",
                                "linear",
                                "cosine",
                                "cosine_with_restarts",
                                "polynomial",
                                "constant",
                                "constant_with_warmup"
                            ],
                            "title": "learning_rate_scheduler"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/CustomChoiceSchema"
                        }
                    ]
                },
                "model_name": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "model_name"
                        },
                        {
                            "title": "model_name",
                            "type": "string"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/CustomChoiceSchema"
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "CustomChoiceSchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "choice"
                    ],
                    "title": "type"
                },
                "values": {
                    "title": "values",
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "string",
                                "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                            },
                            {
                                "title": "values",
                                "type": "number",
                                "format": "integer"
                            }
                        ]
                    }
                }
            },
            "additionalProperties": false
        },
        "RandintSchema": {
            "type": "object",
            "required": [
                "type",
                "upper"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "randint"
                    ],
                    "title": "type"
                },
                "upper": {
                    "title": "upper",
                    "type": "number",
                    "format": "integer"
                }
            },
            "additionalProperties": false
        },
        "UniformSchema": {
            "type": "object",
            "required": [
                "max_value",
                "min_value",
                "type"
            ],
            "properties": {
                "max_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "min_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "uniform",
                        "loguniform"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "QUniformSchema": {
            "type": "object",
            "required": [
                "max_value",
                "min_value",
                "q",
                "type"
            ],
            "properties": {
                "max_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "max_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "min_value": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "min_value",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "q": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "quniform",
                        "qloguniform"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "NormalSchema": {
            "type": "object",
            "required": [
                "mu",
                "sigma",
                "type"
            ],
            "properties": {
                "mu": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "sigma": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "normal",
                        "lognormal"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "QNormalSchema": {
            "type": "object",
            "required": [
                "mu",
                "q",
                "sigma",
                "type"
            ],
            "properties": {
                "mu": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "mu",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "q": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "q",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "sigma": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "integer"
                        },
                        {
                            "title": "sigma",
                            "type": "number",
                            "format": "float"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "qnormal",
                        "qlognormal"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "SshJobServiceSchema": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "title": "endpoint",
                    "type": "string",
                    "readonly": true
                },
                "error_message": {
                    "title": "error_message",
                    "type": "string",
                    "readonly": true
                },
                "nodes": {
                    "title": "nodes",
                    "type": "string"
                },
                "port": {
                    "title": "port",
                    "type": "number",
                    "format": "integer"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "ssh_public_keys": {
                    "title": "ssh_public_keys",
                    "type": "string"
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "ssh"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "TensorBoardJobServiceSchema": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "title": "endpoint",
                    "type": "string",
                    "readonly": true
                },
                "error_message": {
                    "title": "error_message",
                    "type": "string",
                    "readonly": true
                },
                "log_dir": {
                    "title": "log_dir",
                    "type": "string"
                },
                "nodes": {
                    "title": "nodes",
                    "type": "string"
                },
                "port": {
                    "title": "port",
                    "type": "number",
                    "format": "integer"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "tensor_board"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "VsCodeJobServiceSchema": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "title": "endpoint",
                    "type": "string",
                    "readonly": true
                },
                "error_message": {
                    "title": "error_message",
                    "type": "string",
                    "readonly": true
                },
                "nodes": {
                    "title": "nodes",
                    "type": "string"
                },
                "port": {
                    "title": "port",
                    "type": "number",
                    "format": "integer"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "vs_code"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "JupyterLabJobServiceSchema": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "title": "endpoint",
                    "type": "string",
                    "readonly": true
                },
                "error_message": {
                    "title": "error_message",
                    "type": "string",
                    "readonly": true
                },
                "nodes": {
                    "title": "nodes",
                    "type": "string"
                },
                "port": {
                    "title": "port",
                    "type": "number",
                    "format": "integer"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "jupyter_lab"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "JobServiceSchema": {
            "type": "object",
            "properties": {
                "endpoint": {
                    "title": "endpoint",
                    "type": "string",
                    "readonly": true
                },
                "error_message": {
                    "title": "error_message",
                    "type": "string",
                    "readonly": true
                },
                "nodes": {
                    "title": "nodes",
                    "type": "string"
                },
                "port": {
                    "title": "port",
                    "type": "number",
                    "format": "integer"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {}
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "type": {
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "jupyter_lab",
                                "ssh",
                                "tensor_board",
                                "vs_code"
                            ],
                            "title": "type"
                        },
                        {
                            "title": "type",
                            "type": "string"
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "NlpSweepSettingsSchema": {
            "type": "object",
            "properties": {
                "early_termination": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "early_termination"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/BanditPolicySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/MedianStoppingPolicySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/TruncationSelectionPolicySchema"
                        }
                    ]
                },
                "sampling_algorithm": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}",
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "string",
                            "enum": [
                                "bayesian",
                                "grid",
                                "random"
                            ],
                            "title": "sampling_algorithm"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/RandomSamplingAlgorithmSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/GridSamplingAlgorithmSchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/BayesianSamplingAlgorithmSchema"
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "BanditPolicySchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "delay_evaluation": {
                    "title": "delay_evaluation",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "integer"
                },
                "evaluation_interval": {
                    "title": "evaluation_interval",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "integer"
                },
                "slack_amount": {
                    "title": "slack_amount",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "float"
                },
                "slack_factor": {
                    "title": "slack_factor",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "float"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "bandit"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "MedianStoppingPolicySchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "delay_evaluation": {
                    "title": "delay_evaluation",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "integer"
                },
                "evaluation_interval": {
                    "title": "evaluation_interval",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "median_stopping"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "TruncationSelectionPolicySchema": {
            "type": "object",
            "required": [
                "truncation_percentage",
                "type"
            ],
            "properties": {
                "delay_evaluation": {
                    "title": "delay_evaluation",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "integer"
                },
                "evaluation_interval": {
                    "title": "evaluation_interval",
                    "type": [
                        "number",
                        "null"
                    ],
                    "format": "integer"
                },
                "truncation_percentage": {
                    "title": "truncation_percentage",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "truncation_selection"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "RandomSamplingAlgorithmSchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "logbase": {
                    "anyOf": [
                        {
                            "type": "string",
                            "pattern": "\\$\\{\\{\\s*(\\S*)\\s*\\}\\}"
                        },
                        {
                            "title": "logbase",
                            "type": "number",
                            "format": "decimal"
                        },
                        {
                            "title": "logbase",
                            "type": "string"
                        }
                    ],
                    "title": "logbase"
                },
                "rule": {
                    "type": "string",
                    "enum": [
                        "random",
                        "sobol"
                    ],
                    "title": "rule"
                },
                "seed": {
                    "title": "seed",
                    "type": "number",
                    "format": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "random"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "GridSamplingAlgorithmSchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "grid"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "BayesianSamplingAlgorithmSchema": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "bayesian"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "MLTableInputSchema": {
            "type": "object",
            "properties": {
                "datastore": {
                    "title": "datastore",
                    "type": "string",
                    "description": "Name of the datastore to upload local paths to.",
                    "arm_type": "datastores"
                },
                "mode": {
                    "type": "string",
                    "enum": [
                        "download",
                        "ro_mount",
                        "eval_mount",
                        "eval_download",
                        "direct"
                    ],
                    "title": "mode"
                },
                "path": {
                    "oneOf": [
                        {
                            "type": "string",
                            "pattern": "^azureml:.+",
                            "arm_type": "data",
                            "title": "path"
                        },
                        {
                            "title": "path",
                            "type": "string",
                            "pattern": "^(http(s)?):.*"
                        },
                        {
                            "title": "path",
                            "type": "string",
                            "pattern": "^(wasb(s)?):.*"
                        },
                        {
                            "type": "string",
                            "arm_type": "local_path",
                            "title": "path",
                            "pattern": "^file:.*"
                        },
                        {
                            "type": "string",
                            "arm_type": "local_path",
                            "title": "path",
                            "pattern": "^(?!(azureml|http(s)?|wasb(s)?|file):).*"
                        }
                    ]
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "mltable"
                    ],
                    "title": "type"
                }
            },
            "additionalProperties": false
        },
        "NlpFixedParametersSchema": {
            "type": "object",
            "properties": {
                "gradient_accumulation_steps": {
                    "title": "gradient_accumulation_steps",
                    "type": "number",
                    "format": "integer"
                },
                "learning_rate": {
                    "title": "learning_rate",
                    "type": "number",
                    "format": "float"
                },
                "learning_rate_scheduler": {
                    "type": "string",
                    "enum": [
                        "none",
                        "linear",
                        "cosine",
                        "cosine_with_restarts",
                        "polynomial",
                        "constant",
                        "constant_with_warmup"
                    ],
                    "title": "learning_rate_scheduler"
                },
                "model_name": {
                    "title": "model_name",
                    "type": "string"
                },
                "number_of_epochs": {
                    "title": "number_of_epochs",
                    "type": "number",
                    "format": "integer"
                },
                "training_batch_size": {
                    "title": "training_batch_size",
                    "type": "number",
                    "format": "integer"
                },
                "validation_batch_size": {
                    "title": "validation_batch_size",
                    "type": "number",
                    "format": "integer"
                },
                "warmup_ratio": {
                    "title": "warmup_ratio",
                    "type": "number",
                    "format": "float"
                },
                "weight_decay": {
                    "title": "weight_decay",
                    "type": "number",
                    "format": "float"
                }
            },
            "additionalProperties": false
        },
        "TextClassificationMultilabelSchema": {
            "type": "object",
            "required": [
                "target_column_name",
                "task",
                "type"
            ],
            "properties": {
                "compute": {
                    "anyOf": [
                        {
                            "type": "string",
                            "enum": [
                                "local"
                            ],
                            "title": "compute"
                        },
                        {
                            "type": "string",
                            "pattern": "^azureml:.+",
                            "arm_type": "computes",
                            "title": "compute"
                        },
                        {
                            "title": "compute",
                            "type": "string"
                        }
                    ]
                },
                "creation_context": {
                    "type": "object",
                    "$ref": "#/definitions/CreationContextSchema"
                },
                "description": {
                    "title": "description",
                    "type": "string"
                },
                "display_name": {
                    "title": "display_name",
                    "type": "string"
                },
                "environment_id": {
                    "title": "environment_id",
                    "type": "string"
                },
                "environment_variables": {
                    "title": "environment_variables",
                    "type": "object",
                    "additionalProperties": {
                        "title": "environment_variables",
                        "type": "string"
                    }
                },
                "experiment_name": {
                    "title": "experiment_name",
                    "type": "string"
                },
                "featurization": {
                    "type": "object",
                    "$ref": "#/definitions/NlpFeaturizationSettingsSchema",
                    "title": "featurization"
                },
                "id": {
                    "type": "string",
                    "pattern": "^azureml:.+",
                    "arm_type": "jobs",
                    "title": "id",
                    "readonly": true
                },
                "identity": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/ManagedIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/AMLTokenIdentitySchema"
                        },
                        {
                            "type": "object",
                            "$ref": "#/definitions/UserIdentitySchema"
                        }
                    ]
                },
                "limits": {
                    "type": "object",
                    "$ref": "#/definitions/NlpLimitsSchema"
                },
                "log_files": {
                    "title": "log_files",
                    "type": "object",
                    "additionalProperties": {
                        "title": "log_files",
                        "type": "string"
                    }
                },
                "log_verbosity": {
                    "type": "string",
                    "enum": [
                        "not_set",
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "title": "log_verbosity"
                },
                "name": {
                    "title": "name",
                    "type": "string"
                },
                "outputs": {
                    "title": "outputs",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "$ref": "#/definitions/OutputSchema"
                    }
                },
                "primary_metric": {
                    "type": "string",
                    "enum": [
                        "accuracy"
                    ],
                    "title": "primary_metric"
                },
                "properties": {
                    "title": "properties",
                    "type": "object",
                    "additionalProperties": {
                        "title": "properties",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "queue_settings": {
                    "type": "object",
                    "$ref": "#/definitions/QueueSettingsSchema"
                },
                "resources": {
                    "type": "object",
                    "$ref": "#/definitions/JobResourceConfigurationSchema"
                },
                "$schema": {
                    "title": "$schema",
                    "type": "string",
                    "readonly": true
                },
                "search_space": {
                    "title": "search_space",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "$ref": "#/definitions/NlpParameterSubspaceSchema"
                    }
                },
                "services": {
                    "title": "services",
                    "type": "object",
                    "additionalProperties": {
                        "oneOf": [
                            {
                                "type": "object",
                                "$ref": "#/definitions/SshJobServiceSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/TensorBoardJobServiceSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/VsCodeJobServiceSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/JupyterLabJobServiceSchema"
                            },
                            {
                                "type": "object",
                                "$ref": "#/definitions/JobServiceSchema"
                            }
                        ]
                    }
                },
                "status": {
                    "title": "status",
                    "type": "string",
                    "readonly": true
                },
                "sweep": {
                    "type": "object",
                    "$ref": "#/definitions/NlpSweepSettingsSchema"
                },
                "tags": {
                    "title": "tags",
                    "type": "object",
                    "additionalProperties": {
                        "title": "tags",
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "target_column_name": {
                    "title": "target_column_name",
                    "type": "string"
                },
                "task": {
                    "type": "string",
                    "enum": [
                        "text_classification_multilabel"
                    ],
                    "title": "task"
                },
                "training_data": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/MLTableInputSchema"
                        }
                    ]
                },
                "training_parameters": {
                    "type": "object",
                    "$ref": "#/definitions/NlpFixedParametersSchema"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "automl"
                    ],
                    "title": "type"
                },
                "validation_data": {
                    "anyOf": [
                        {
                            "type": "object",
                            "$ref": "#/definitions/MLTableInputSchema"
                        }
                    ]
                }
            },
            "additionalProperties": false
        }
    },
    "$ref": "#/definitions/TextClassificationMultilabelSchema"
}